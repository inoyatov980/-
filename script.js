// –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
const choices = ['rock', 'paper', 'scissors'];

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤
let playerScore = 0;
let computerScore = 0;

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
let resultElement = document.getElementById('result');
let historyList = document.getElementById('history');
let playerScoreDisplay = document.getElementById('playerScore');
let computerScoreDisplay = document.getElementById('computerScore');

// –ü–æ–ª—É—á–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
window.Telegram.WebApp.onReady(() => {
    const userID = window.Telegram.WebApp.initDataUnsafe.user.id;
    const username = window.Telegram.WebApp.initDataUnsafe.user.username || '';

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ hidden input
    document.getElementById('telegramUserID').value = userID;

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
    $.ajax({
        method: 'POST',
        url: '/register-user', // –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
        dataType: 'json',
        data: {
            telegram_id: userID,
            username: username
        },
        success: function(response) {
            alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        },
        error: function(error) {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
        }
    });
});

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
function computerChoice() {
    return choices[Math.floor(Math.random() * choices.length)];
}

// –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤—ã–±–æ—Ä—ã –∏–≥—Ä–æ–∫–∞ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
function compareChoices(playerChoice, compChoice) {
    let resultText;
    switch (playerChoice + '|' + compChoice) {
        case 'rock|scissors':   // –∫–∞–º–µ–Ω—å –ø–æ–±–µ–∂–¥–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã
        case 'scissors|paper':  // –Ω–æ–∂–Ω–∏—Ü—ã –ø–æ–±–µ–∂–¥–∞—é—Ç –±—É–º–∞–≥—É
        case 'paper|rock':      // –±—É–º–∞–≥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –∫–∞–º–µ–Ω—å
            resultText = '–ü–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫!';
            playerScore++;
            break;
        case 'rock|paper':     // –∫–∞–º–µ–Ω—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –±—É–º–∞–≥–µ
        case 'scissors|rock':  // –Ω–æ–∂–Ω–∏—Ü—ã –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é—Ç –∫–∞–º–Ω—é
        case 'paper|scissors': // –±—É–º–∞–≥–∞ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü–∞–º
            resultText = '–ö–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–±–µ–¥–∏–ª.';
            computerScore++;
            break;
        default:
            resultText = '–ù–∏—á—å—è!';
    }
    return resultText;
}

// –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã
function playGame(choice) {
    const compChoice = computerChoice();  // –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±–∏—Ä–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç
    const result = compareChoices(choice, compChoice);  // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤—ã–±–æ—Ä
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞
    resultElement.innerHTML = `
        ${choice === 'rock' ? 'ü™®' : choice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}
        –ø—Ä–æ—Ç–∏–≤
        ${compChoice === 'rock' ? 'ü™®' : compChoice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}
        ‚Üí
        ${result}
    `;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç
    playerScoreDisplay.textContent = `–ò–≥—Ä–æ–∫: ${playerScore}`;
    computerScoreDisplay.textContent = `–ö–æ–º–ø—å—é—Ç–µ—Ä: ${computerScore}`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –º–∞—Ç—á–µ–π
    const matchResult = `<li>${choice} (${choice === 'rock' ? 'ü™®' : choice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}) vs ${compChoice} (${compChoice === 'rock' ? 'ü™®' : compChoice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}) ‚Üí ${result}</li>`;
    historyList.insertAdjacentHTML('afterbegin', matchResult);
}

// –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏
document.querySelectorAll('.options button').forEach(button => {
    button.addEventListener('click', () => {
        playGame(button.dataset.choice);
    });
});
