// –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
const choices = ['rock', 'paper', 'scissors'];

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤
let playerScore = 0;
let computerScore = 0;

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
let resultElement = document.getElementById('result');
let historyList = document.getElementById('history');
let playerScoreDisplay = document.getElementById('playerScore');
let computerScoreDisplay = document.getElementById('computerScore');

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
function computerChoice() {
    return choices[Math.floor(Math.random() * choices.length)];
}

// –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤—ã–±–æ—Ä—ã –∏–≥—Ä–æ–∫–∞ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
function compareChoices(playerChoice, compChoice) {
    let resultText;
    switch (playerChoice + '|' + compChoice) {
        case 'rock|scissors':   // –∫–∞–º–µ–Ω—å –ø–æ–±–µ–∂–¥–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã
        case 'scissors|paper':  // –Ω–æ–∂–Ω–∏—Ü—ã –ø–æ–±–µ–∂–¥–∞—é—Ç –±—É–º–∞–≥—É
        case 'paper|rock':      // –±—É–º–∞–≥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –∫–∞–º–µ–Ω—å
            resultText = '–ü–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫!';
            playerScore++;
            break;
        case 'rock|paper':     // –∫–∞–º–µ–Ω—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –±—É–º–∞–≥–µ
        case 'scissors|rock':  // –Ω–æ–∂–Ω–∏—Ü—ã –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é—Ç –∫–∞–º–Ω—é
        case 'paper|scissors': // –±—É–º–∞–≥–∞ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü–∞–º
            resultText = '–ö–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–±–µ–¥–∏–ª.';
            computerScore++;
            break;
        default:
            resultText = '–ù–∏—á—å—è!';
    }
    return resultText;
}

// –ò–≥—Ä–∞
function playGame(choice) {
    const compChoice = computerChoice();  // –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±–∏—Ä–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç
    const result = compareChoices(choice, compChoice);  // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤—ã–±–æ—Ä
    
    // –°–æ–æ–±—â–∞–µ–º –∏–≥—Ä–æ–∫—É –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ä–∞—É–Ω–¥–∞
    resultElement.innerHTML = `
        ${choice === 'rock' ? 'ü™®' : choice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}
        –ø—Ä–æ—Ç–∏–≤
        ${compChoice === 'rock' ? 'ü™®' : compChoice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}
        ‚Üí
        ${result}
    `;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—á–∫–∏
    playerScoreDisplay.textContent = `–ò–≥—Ä–æ–∫: ${playerScore}`;
    computerScoreDisplay.textContent = `–ö–æ–º–ø—å—é—Ç–µ—Ä: ${computerScore}`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–∞—Ä—Ç–∏–π
    const matchResult = `<li>${choice} (${choice === 'rock' ? 'ü™®' : choice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}) vs ${compChoice} (${compChoice === 'rock' ? 'ü™®' : compChoice === 'scissors' ? '‚úÇÔ∏è' : 'üìÑ'}) ‚Üí ${result}</li>`;
    historyList.insertAdjacentHTML('afterbegin', matchResult);
}

// –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
document.querySelectorAll('.options button').forEach(button => {
    button.addEventListener('click', () => {
        playGame(button.dataset.choice);
    });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
window.Telegram.WebApp.ready();
